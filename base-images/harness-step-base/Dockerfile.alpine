ARG ALPINE_VERSION=3.16.1

FROM alpine:${ALPINE_VERSION}

RUN apk --no-cache add \
    bash=5.1.16-r2 \
    curl=7.83.1-r2 \
    wget=1.21.3-r0 \
    git=2.36.2-r0 \
    nano=6.3-r0 \
    sudo=1.9.10-r0 \
    python3=3.10.5-r0 \
    ca-certificates=20220614-r0 \
    less=590-r0 \
    ncurses-terminfo-base=6.3_p20220521-r0 \
    krb5-libs=1.19.3-r0 \
    libgcc=11.2.1_git20220219-r2 \
    libintl=0.21-r2 \
    libssl1.1=1.1.1q-r0 \
    libstdc++=11.2.1_git20220219-r2 \
    tzdata=2022a-r0  \
    userspace-rcu=0.13.1-r0 \
    zlib=1.2.12-r2 \
    icu-libs=71.1-r2 \
    docker=20.10.16-r2	 \
    openrc=0.44.10-r7\
    libc6-compat=1.2.3-r0

# Install httpie
RUN ln -s /usr/bin/python3 /usr/local/bin/python && \
    python -m ensurepip --upgrade && \
    python -m pip install --upgrade pip wheel && \
    python -m pip install httpie

# Install kubectl
RUN http -F "https://dl.k8s.io/release/$(http -F https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" > /usr/local/bin/kubectl && \
    chmod +x /usr/local/bin/kubectl 

# Install pwsh
SHELL ["/bin/ash", "-eo", "pipefail", "-c"]
RUN apk -X https://dl-cdn.alpinelinux.org/alpine/edge/main add --no-cache && \
    mkdir -p /opt/microsoft/powershell/7 && \
    http -d GET https://github.com/PowerShell/PowerShell/releases/download/v7.2.5/powershell-7.2.5-linux-alpine-x64.tar.gz | tar zxf - -C /opt/microsoft/powershell/7 && \
    chmod +x /opt/microsoft/powershell/7/pwsh && \
    ln -s /opt/microsoft/powershell/7/pwsh /usr/bin/pwsh

# Install jq
RUN http -d GET https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o /usr/local/bin/jq && \
    chmod +x /usr/local/bin/jq

# Install yq
RUN http -d GET https://github.com/mikefarah/yq/releases/download/v4.27.2/yq_linux_amd64 -o /usr/local/bin/yq && \
    chmod +x /usr/local/bin/yq

# Setup docker cli
RUN rc-update add docker boot

# Install golang
RUN http -d GET https://go.dev/dl/go1.19.linux-amd64.tar.gz | tar zxf - -C /usr/local && \
    ln -s /usr/local/go/bin/go /usr/local/bin/go

# change default shell from ash to bash
RUN sed -i -e "s/bin\/ash/bin\/bash/" /etc/passwd
ENV LC_ALL=en_US.UTF-8

# install github cli
RUN http -d GET https://github.com/cli/cli/releases/download/v2.14.3/gh_2.14.3_linux_amd64.tar.gz | tar zxf - -C /opt && \
    ln -s /opt/gh_2.14.3_linux_amd64/bin/gh  /usr/local/bin/gh

# install helm cli
RUN mkdir /opt/helm && \
    http -d GET https://get.helm.sh/helm-v3.9.2-linux-amd64.tar.gz | tar zxf - -C /opt/helm && \
    ln -s /opt/helm/linux-amd64/helm /usr/local/bin/helm

# install go-template
RUN http -d GET https://app.harness.io/public/shared/tools/go-template/release/v0.4/bin/linux/amd64/go-template -o /usr/local/bin/go-template && \
    chmod +x /usr/local/bin/go-template 
    
CMD ["/bin/bash"]
